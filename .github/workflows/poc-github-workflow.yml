on:
  workflow_call:
    inputs:
      REGISTY_NAME_FAKE:
        required: true
        type: string
      NAME_PROJECT_FAKE:
        required: true
        type: string
      LOCATION_DOCKERFILE_DOCKER_COMPOSE_FAKE:
        required: true
        type: string
      PROJECT_FAKE:
        required: true
        type: string
      ENVIRONMENT:
        required: true
        type: string
    secrets:
      AZURE_CLIENT_ID_FAKE:
        required: true
      AZURE_CLIENT_SECRET_FAKE:
        required: true
      CREDENTIALS_FAKE:
        required: true
      CORP_REGISTRY_USERNAME_FAKE:
        required: true
      CORP_REGISTRY_PASSWORD_FAKE:
        required: true
      GH_TOKEN:
        required: true

jobs:
  get_environment_app:
    name: Get Environment
    runs-on: ubuntu-latest
    outputs:
      granto_env: ${{ steps.get_step.outputs.granto_env }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Get Environment
        id: get_step
        uses: rafaelrochasantos/poc-centralize-workflow/.github/actions/get-environment@develop

  build:
    name: Build ${{ inputs.ENVIRONMENT }}
    needs: [get_environment_app]
    runs-on: ubuntu-latest
    environment: ${{ inputs.ENVIRONMENT }}
    env:
      GRANTO_ENV: ${{ needs.get_environment_app.outputs.grant_env }}

    steps:
      - uses: actions/checkout@v4
      - name: Run Build App
        uses: rafaelrochasantos/poc-centralize-workflow/.github/actions/c-sharp/build@develop
        env:
          AZURE_CLIENT_ID_FAKE: ${{ secrets.AZURE_CLIENT_ID_FAKE }}
          AZURE_CLIENT_SECRET_FAKE: ${{ secrets.AZURE_CLIENT_SECRET_FAKE }}
          CREDENTIALS_FAKE: ${{ secrets.CREDENTIALS_FAKE }}
          CORP_REGISTRY_USERNAME_FAKE: ${{ secrets.CORP_REGISTRY_USERNAME_FAKE }}
          CORP_REGISTRY_PASSWORD_FAKE: ${{ secrets.CORP_REGISTRY_PASSWORD_FAKE }}
          REGISTY_NAME_FAKE: ${{ inputs.REGISTY_NAME_FAKE }}
          NAME_PROJECT_FAKE: ${{ inputs.NAME_PROJECT_FAKE }}
          LOCATION_DOCKERFILE_DOCKER_COMPOSE_FAKE: ${{ inputs.LOCATION_DOCKERFILE_DOCKER_COMPOSE_FAKE }}
          PROJECT_FAKE: ${{ inputs.PROJECT_FAKE }}
          GRANTO_ENV: $GRANTO_ENV

  tests:
    name: 'Tests'
    runs-on: ubuntu-latest
    needs: [build]
    environment: ${{ inputs.ENVIRONMENT }}

    steps:
      - uses: actions/checkout@v4
      - name: Tests
        uses: rafaelrochasantos/poc-centralize-workflow/.github/actions/c-sharp/tests@main

  security-scan:
    needs: [tests]
    name: 'Security'
    runs-on: ubuntu-latest
    environment: ${{ inputs.ENVIRONMENT }}
    steps:
      - uses: actions/checkout@v4
      - name: Security
        uses: rafaelrochasantos/poc-centralize-workflow/.github/actions/c-sharp/security@main

  lint:
    name: 'Lint'
    runs-on: ubuntu-latest
    needs: [tests]
    environment: ${{ inputs.ENVIRONMENT }}
    steps:
      - uses: actions/checkout@v4
      - name: 'Code lint'
        uses: rafaelrochasantos/poc-centralize-workflow/.github/actions/c-sharp/lint@main

  versioning-stg:
    name: 'Versioning-staging'
    runs-on: ubuntu-latest
    needs: [security-scan, lint]
    environment: ${{ inputs.ENVIRONMENT }}
    if: |
      (github.event.pull_request.merged != true ||
      github.event_name != 'pull_request')
      && (github.ref != 'refs/heads/main' || github.ref != 'refs/heads/master')

    steps:
      - uses: actions/checkout@v4
      - name: Run Generate tag
        uses: rafaelrochasantos/poc-centralize-workflow/.github/actions/c-sharp/versioning-stg@main

  versioning:
    name: 'Versioning'
    runs-on: ubuntu-latest
    needs: [security-scan, lint]
    environment: ${{ inputs.ENVIRONMENT }}
    if: github.ref_name == 'main' || startsWith(github.ref_name, 'feat/')

    steps:
      - uses: actions/checkout@v4
      - name: Run generate release
        uses: rafaelrochasantos/poc-centralize-workflow/.github/actions/c-sharp/versioning-prd@develop
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

  deploy:
    name: "Deploy"
    runs-on: ubuntu-latest
    needs: [versioning]
    environment: ${{ inputs.ENVIRONMENT }}
    if: |
      github.event.pull_request.merged == true &&
      (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    steps:
      - uses: actions/checkout@v4
      - name: "Deploy"
        uses: rafaelrochasantos/poc-centralize-workflow/.github/actions/c-sharp/deploy@main
