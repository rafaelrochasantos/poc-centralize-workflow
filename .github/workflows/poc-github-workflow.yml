on:
  workflow_call:
    secrets:
        AZURE_CLIENT_ID_FAKE:
          required: true
        AZURE_CLIENT_SECRET_FAKE:
          required: true
        CREDENTIALS_FAKE:
          required: true
        CORP_REGISTRY_USERNAME_FAKE:
          required: true
        CORP_REGISTRY_PASSWORD_FAKE:
          required: true
    inputs:
      REGISTY_NAME_FAKE:
        required: true
        type: string
      NAME_PROJECT_FAKE:
        required: true
        type: string
      LOCATION_DOCKERFILE_DOCKER_COMPOSE_FAKE:
        required: true
        type: string
      PROJECT_FAKE:
        required: true
        type: string

jobs:
  build:
    name: 'Build'
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}

    steps:
      - uses: actions/checkout@v4
      - name: Run Build App
        uses: rafaelrochasantos/poc-centralize-workflow/.github/actions/c-sharp/build@main

  tests:
    name: 'Tests'
    runs-on: ubuntu-latest
    needs: [build]
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}

    steps:
      - uses: actions/checkout@v4
      - name: Tests
        uses: rafaelrochasantos/poc-centralize-workflow/.github/actions/c-sharp/tests@main

  security-scan:
    needs: [tests]
    name: 'Security'
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
    steps:
      - uses: actions/checkout@v4
      - name: Security
        uses: rafaelrochasantos/poc-centralize-workflow/.github/actions/c-sharp/security@main

  lint:
    name: 'Lint'
    runs-on: ubuntu-latest
    needs: [tests]
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
    steps:
      - uses: actions/checkout@v4
      - name: 'Code lint'
        uses: rafaelrochasantos/poc-centralize-workflow/.github/actions/c-sharp/lint@main

  versioning-stg:
    name: 'Versioning-staging'
    runs-on: ubuntu-latest
    needs: [security-scan, lint]
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
    if: |
      (github.event.pull_request.merged != true ||
      github.event_name != 'pull_request')
      && (github.ref != 'refs/heads/main' || github.ref != 'refs/heads/master')

    steps:
      - uses: actions/checkout@v4
      - name: Run Generate tag
        uses: rafaelrochasantos/poc-centralize-workflow/.github/actions/c-sharp/versioning-stg@main

  versioning:
    name: 'Versioning'
    runs-on: ubuntu-latest
    needs: [security-scan, lint]
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
    if: |
      github.event.pull_request.merged == true &&
      (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')

    steps:
      - uses: actions/checkout@v4
      - name: Run generate release
        uses: rafaelrochasantos/poc-centralize-workflow/.github/actions/c-sharp/versioning-prd@main

  deploy:
    name: "Deploy"
    runs-on: ubuntu-latest
    needs: [versioning]
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
    if: |
      github.event.pull_request.merged == true &&
      (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    steps:
      - uses: actions/checkout@v4
      - name: "Deploy"
        uses: rafaelrochasantos/poc-centralize-workflow/.github/actions/c-sharp/deploy@main
